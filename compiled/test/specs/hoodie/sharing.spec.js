// Generated by CoffeeScript 1.3.1

define('specs/hoodie/sharing', ['mocks/hoodie', 'hoodie/sharing', 'hoodie/sharing/instance'], function(HoodieMock, Sharing, SharingInstance) {
  return describe("Sharing", function() {
    beforeEach(function() {
      this.hoodie = new HoodieMock;
      return this.sharing = new Sharing(this.hoodie);
    });
    describe(".constructor", function() {
      return it("should set SharingInstance.hoodie", function() {
        var hoodie;
        hoodie = 'check 1,2';
        new Sharing(hoodie);
        return expect(SharingInstance.hoodie).toBe('check 1,2');
      });
    });
    describe(".create", function() {
      beforeEach(function() {
        return spyOn(SharingInstance, "create");
      });
      return it("should call SharingInstance.create", function() {
        var options;
        options = {
          funky: 'fresh'
        };
        this.sharing.create(options);
        return expect(SharingInstance.create).wasCalledWith(options);
      });
    });
    return describe(".destroy", function() {
      beforeEach(function() {
        return spyOn(SharingInstance, "destroy");
      });
      return it("should call SharingInstance.destroy", function() {
        this.sharing.destroy(123);
        return expect(SharingInstance.destroy).wasCalledWith(123);
      });
    });
  });
});
