// Generated by CoffeeScript 1.3.1

define('hoodie/sharing/instance', ['hoodie/config'], function(Config) {
  var SharingInstance;
  return SharingInstance = (function() {

    SharingInstance.name = 'SharingInstance';

    function SharingInstance(hoodie, attributes) {
      var funky;
      this.hoodie = hoodie;
      if (attributes == null) {
        attributes = {};
      }
      attributes.id || (attributes.id = this.hoodie.store.uuid(7));
      this.config = new Config(this.hoodie, {
        type: '$sharing',
        id: attributes.id
      });
      funky = 1;
    }

    SharingInstance.prototype.create = function() {
      var defer,
        _this = this;
      defer = this.hoodie.defer();
      if (options.invitees != null) {
        options["private"] = true;
      }
      options.filter = this._turn_filters_into_function(options.filters);
      delete options.filters;
      this.hoodie.store.save("$sharing", options.id, options).done(function(sharing) {
        return _this.hoodie.one("remote:created:$sharing:" + sharing.id, defer.resolve);
      });
      return defer.promise();
    };

    return SharingInstance;

  })();
});
