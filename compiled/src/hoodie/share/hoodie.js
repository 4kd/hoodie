// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hoodie.Share.Hoodie = (function(_super) {

  __extends(Hoodie, _super);

  Hoodie.prototype.modules = function() {
    return {
      my: {
        account: Hoodie.Share.Account,
        remote: Hoodie.Share.Remote
      }
    };
  };

  function Hoodie(hoodie, share) {
    var event, _i, _len, _ref,
      _this = this;
    this.share = share;
    this.my = {
      store: hoodie.my.store,
      config: {
        set: this.share.set,
        get: this.share.get,
        remove: this.share.set
      }
    };
    this.my.config.set('_account.username', "share/" + this.share.id);
    this.my.config.set('_account.owner', "share/" + this.share.id);
    this.my.config.set('_remote.sync', this.share.continuous === true);
    _ref = ['store:dirty:idle'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      event = _ref[_i];
      hoodie.on(event, function() {
        return _this.trigger(event);
      });
    }
    Hoodie.__super__.constructor.call(this, hoodie.baseUrl);
  }

  Hoodie.prototype.request = function(type, path, options) {
    var auth, defaults, hash;
    if (options == null) {
      options = {};
    }
    defaults = {
      type: type,
      url: "" + this.baseUrl + path,
      xhrFields: {
        withCredentials: true
      },
      crossDomain: true,
      dataType: 'json'
    };
    if (!this.share._userRev) {
      hash = btoa("share/" + this.share.id + ":" + (this.share.password || ''));
      auth = "Basic " + hash;
      $.extend(defaults, {
        headers: {
          Authorization: auth
        }
      });
    }
    return $.ajax($.extend(defaults, options));
  };

  return Hoodie;

})(Hoodie);
