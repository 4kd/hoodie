// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hoodie.Account.RemoteStore = (function(_super) {

  __extends(RemoteStore, _super);

  RemoteStore.prototype._sync = true;

  function RemoteStore() {
    this.connect = __bind(this.connect, this);

    this.deactivate = __bind(this.deactivate, this);

    this.activate = __bind(this.activate, this);
    RemoteStore.__super__.constructor.apply(this, arguments);
    this.basePath = "/" + (encodeURIComponent(this.hoodie.my.account.db()));
    if (this.hoodie.my.config.get('_remote.sync') != null) {
      this._sync = this.hoodie.my.config.get('_remote.sync');
    }
    if (this.isContinuouslySyncing()) {
      this.activate();
    }
  }

  RemoteStore.prototype.activate = function() {
    this.hoodie.my.config.set('_remote.sync', this._sync = true);
    this.hoodie.on('account:signedOut', this.disconnect);
    this.hoodie.on('account:signedIn', this.connect);
    return this.connect();
  };

  RemoteStore.prototype.deactivate = function() {
    this.hoodie.my.config.set('_remote.sync', this._sync = false);
    this.hoodie.unbind('account:signedIn', this.connect);
    this.hoodie.unbind('account:signedOut', this.disconnect);
    return this.disconnect();
  };

  RemoteStore.prototype.connect = function() {
    var _this = this;
    this.connected = true;
    return this.hoodie.my.account.authenticate().pipe(function() {
      return _this.sync();
    });
  };

  return RemoteStore;

})(Hoodie.RemoteStore);
