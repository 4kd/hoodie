// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __slice = [].slice;

Hoodie.AccountRemoteStore = (function(_super) {

  __extends(AccountRemoteStore, _super);

  AccountRemoteStore.prototype._sync = true;

  function AccountRemoteStore(hoodie, options) {
    this.hoodie = hoodie;
    if (options == null) {
      options = {};
    }
    this._handleSignIn = __bind(this._handleSignIn, this);

    this.push = __bind(this.push, this);

    this.sync = __bind(this.sync, this);

    this.stopSyncing = __bind(this.stopSyncing, this);

    this.startSyncing = __bind(this.startSyncing, this);

    this.connect = __bind(this.connect, this);

    this.name = this.hoodie.my.account.db();
    if (this.hoodie.my.config.get('_remote.sync') != null) {
      this._sync = this.hoodie.my.config.get('_remote.sync');
    }
    AccountRemoteStore.__super__.constructor.apply(this, arguments);
  }

  AccountRemoteStore.prototype.connect = function() {
    var _this = this;
    return this.hoodie.my.account.authenticate().pipe(function() {
      return AccountRemoteStore.__super__.connect.apply(_this, arguments);
    });
  };

  AccountRemoteStore.prototype.disconnect = function() {
    this.hoodie.unbind('store:idle', this.push);
    return AccountRemoteStore.__super__.disconnect.apply(this, arguments);
  };

  AccountRemoteStore.prototype.startSyncing = function() {
    this.hoodie.my.config.set('_remote.sync', true);
    this.hoodie.on('account:signin', this._handleSignIn);
    this.hoodie.on('account:signout', this.disconnect);
    return AccountRemoteStore.__super__.startSyncing.apply(this, arguments);
  };

  AccountRemoteStore.prototype.stopSyncing = function() {
    this.hoodie.my.config.set('_remote.sync', false);
    this.hoodie.unbind('account:signin', this._handleSignIn);
    this.hoodie.unbind('account:signout', this.disconnect);
    return AccountRemoteStore.__super__.stopSyncing.apply(this, arguments);
  };

  AccountRemoteStore.prototype.sync = function(docs) {
    if (this.isContinuouslyPushing()) {
      this.hoodie.unbind('store:idle', this.push);
      this.hoodie.on('store:idle', this.push);
    }
    return AccountRemoteStore.__super__.sync.apply(this, arguments);
  };

  AccountRemoteStore.prototype.getSinceNr = function(since) {
    return this.hoodie.my.config.get('_remote.since') || 0;
  };

  AccountRemoteStore.prototype.setSinceNr = function(since) {
    return this.hoodie.my.config.set('_remote.since', since);
  };

  AccountRemoteStore.prototype.push = function(docs) {
    if (!$.isArray(docs)) {
      docs = this.hoodie.my.store.changedDocs();
    }
    return AccountRemoteStore.__super__.push.call(this, docs);
  };

  AccountRemoteStore.prototype.on = function(event, cb) {
    event = event.replace(/(^| )([^ ]+)/g, "$1remote:$2");
    return this.hoodie.on(event, cb);
  };

  AccountRemoteStore.prototype.one = function(event, cb) {
    event = event.replace(/(^| )([^ ]+)/g, "$1remote:$2");
    return this.hoodie.one(event, cb);
  };

  AccountRemoteStore.prototype.trigger = function() {
    var event, parameters, _ref;
    event = arguments[0], parameters = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return (_ref = this.hoodie).trigger.apply(_ref, ["remote:" + event].concat(__slice.call(parameters)));
  };

  AccountRemoteStore.prototype._handleSignIn = function() {
    this.name = this.hoodie.my.account.db();
    return this.connect();
  };

  return AccountRemoteStore;

})(Hoodie.RemoteStore);
