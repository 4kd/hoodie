// Generated by CoffeeScript 1.3.3

define('hoodie/sharing', ['hoodie/sharing/instance'], function(SharingInstance) {
  var Sharing;
  return Sharing = (function() {

    function Sharing(hoodie) {
      this.hoodie = hoodie;
      SharingInstance.hoodie = this.hoodie;
    }

    Sharing.prototype.create = function(options) {
      if (options == null) {
        options = {};
      }
      return SharingInstance.create(options);
    };

    Sharing.prototype.load = function(id) {
      return SharingInstance.load(id);
    };

    Sharing.prototype.find_or_create = function(options) {
      var defer;
      defer = this.hoodie.defer();
      SharingInstance.load(options.id).done(function(sharing) {
        return defer.resolve(sharing);
      }).fail(function() {
        var test;
        test = SharingInstance.create(options).then(defer.resolve, defer.reject);
        return console.log(test, test.isResolved());
      });
      return defer.promise();
    };

    Sharing.prototype.destroy = function(id) {
      return SharingInstance.destroy(id);
    };

    Sharing.prototype.open = function(id, options) {
      if (options == null) {
        options = {};
      }
    };

    Sharing.prototype["delete"] = Sharing.prototype.destroy;

    return Sharing;

  })();
});
