// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Hoodie.Share = (function() {

  function Share(hoodie) {
    var api;
    this.hoodie = hoodie;
    this.open = __bind(this.open, this);

    api = this.open;
    api.instance = Hoodie.Share.Instance;
    api.instance.hoodie = this.hoodie;
    return api;
  }

  Share.prototype.create = function(options) {
    var share;
    if (options == null) {
      options = {};
    }
    share = new Hoodie.Share.Instance(options);
    return share.save();
  };

  Share.prototype.load = function(id) {
    var _this = this;
    return this.hoodie.my.store.load('$share', id).pipe(function(obj) {
      return new Hoodie.Share.Instance(obj);
    });
  };

  Share.prototype.destroy = function(id) {
    var _this = this;
    return this.load(id).pipe(function(obj) {
      var share;
      share = new Hoodie.Share.Instance(obj);
      return share.destroy();
    });
  };

  Share.prototype["delete"] = Share.prototype.destroy;

  Share.prototype.open = function() {
    var _ref;
    return (_ref = this.instance).open.apply(_ref, arguments);
  };

  return Share;

})();
